sudo: required
dist: xenial

os: linux
language: minimal
cache:
  directories:
  - depends/built
  - depends/sdk-sources
  - $HOME/.ccache
env:
  global:
    - MAKEJOBS=-j2
    - RUN_TESTS=false
    - CHECK_DOC=0
    - CHECK_LOGPRINT=0
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=500M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - PYTHON_DEBUG=1
    - WINEDEBUG=fixme-all
  matrix:
# ARM
    - REASON=ARM HOST=arm-linux-gnueabihf PACKAGES="g++-arm-linux-gnueabihf" CHECK_DOC=0 CHECK_LOGPRINT=1 GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports --disable-tests"
# Win32
    - REASON=Win HOST=i686-w64-mingw32 DPKG_ADD_ARCH="i386" PACKAGES="python3 nsis g++-mingw-w64-i686 wine1.6 bc" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-reduce-exports --disable-tests"
# 32-bit
#    - REASON=Linux32 HOST=i686-pc-linux-gnu PACKAGES="g++-multilib bc python3-zmq" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports --disable-tests LDFLAGS=-static-libstdc++" USE_SHELL="/bin/dash" PYZMQ=true
# Win64
#buggy libs    - REASON=Win64 HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH="i386" PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine1.6 bc" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-reduce-exports --disable-tests"
# Linux64
    - REASON=Linux64 HOST=x86_64-unknown-linux-gnu PACKAGES="bc python3-zmq" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports --disable-tests CPPFLAGS=-DDEBUG_LOCKORDER" PYZMQ=true
# No wallet
#    - REASON=NodeOnly HOST=x86_64-unknown-linux-gnu PACKAGES="python3" DEP_OPTS="NO_WALLET=1" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
# Cross-Mac
    - REASON=MacOSX HOST=x86_64-apple-darwin11 PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev" BITCOIN_CONFIG="--enable-reduce-exports --disable-tests" OSX_SDK=10.11 GOAL="deploy"

before_install:
    - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
    - echo -n "TRAVIS VM " && cat /proc/cpuinfo | grep cores
install:
    - if [ "$PYZMQ" = "true" ]; then pip install pyzmq --user ; fi
    - if [ -n "$PPA" ]; then travis_retry sudo add-apt-repository "$PPA" -y; fi
    - if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update && travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi
before_script:
    - unset CC; unset CXX
    - if [ "$CHECK_DOC" = 1 ]; then contrib/devtools/check-doc.py; fi
    - if [ "$CHECK_LOGPRINT" = 1 ]; then contrib/devtools/logprint-scanner.py; fi
    - mkdir -p depends/SDKs depends/sdk-sources
    - if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
script:
    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
    - if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
    - BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
    - test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
    - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    #- make distdir PACKAGE=bitcoin VERSION=$HOST
    #- cd bitcoin-$HOST
    #- ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL V=1 ; false )
    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
    - if [ "$RUN_TESTS" = "true" ]; then make $MAKEJOBS check VERBOSE=1; fi
    #- if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.py --coverage; fi
after_script:
    - echo $TRAVIS_COMMIT_RANGE
    - echo $TRAVIS_COMMIT_LOG
after_success:
    - find $OUTDIR
    - export VERSION=$REASON-$TRAVIS_BRANCH
    - if [ "$REASON" = "ARM" ]; then cd $OUTDIR && cp -a bin XUMA-$VERSION && ls XUMA-$VERSION/ && zip -r XUMA-$VERSION.zip XUMA-$VERSION && ls; fi
    - if [ "$REASON" = "Win" ]; then cd $OUTDIR && cp -a bin XUMA-$VERSION && ls XUMA-$VERSION/ && zip -r XUMA-$VERSION.zip XUMA-$VERSION && ls; fi
#buggy    - if [ "$REASON" = "Win64" ]; then cd $OUTDIR && cp -a bin XUMA-$VERSION && ls XUMA-$VERSION/ && zip -r XUMA-$VERSION.zip XUMA-$VERSION && ls; fi
#    - if [ "$REASON" = "Linux32" ]; then cd $OUTDIR && cp -a bin XUMA-$VERSION && ls XUMA-$VERSION/ && zip -r XUMA-$VERSION.zip XUMA-$VERSION && ls; fi
    - if [ "$REASON" = "Linux64" ]; then cd $OUTDIR && cp -a bin XUMA-$VERSION && ls XUMA-$VERSION/ && zip -r XUMA-$VERSION.zip XUMA-$VERSION && ls; fi
    - if [ "$REASON" = "MacOSX" ]; then pwd && find . -name '*.dmg' && echo $OUTDIR && mkdir -p $OUTDIR && cp *.dmg $OUTDIR/XUMA-$VERSION.dmg && ls; fi
    - cd $OUTDIR
    - git init
    - git add --force --all
    - git commit -m "Latest Build"
    - git remote add origin https://github.com/flyinghuman/xuma-builds.git
    - git push -f -u https://$BUILDTOKEN@github.com/flyinghuman/xuma-builds.git master:$REASON
deploy:
  provider: releases
  api_key: 
    secure: "ZxHTA6TRKPLgnoLV61seOmjy+rQxcOuRPckXTRQpEGnUTmTTOYonyFu7hYewYo0e6QS9NA/q1iJmA97TlfNIQF+Ai5sTifT4CKWPoV4sySZm1OCLpcmEu/Z5gDdccUeRObpOWSZsmOmNioaPfTlYDlQ4DqCzzIum0DVQ5zT+s4sqtnNkGDulgYImWvSq/5pd/R1cpVdFIP9BhQKLYRUaMGY6F3n499dJna0FFmIXu74i6+6Z3XfXwPK3V2w+4Vug3427HoUe2XJKmCG1fUZAuKnR3h2tY/yPw8r95NpD8KMfA69W90qf/6wH/sNwJyRLWnkJq2FzZmbhZdo03YltFTgRpcVzzVdOwv6H3k5GVoVAg7U73VqlMHWVgv+U06di/Ys+Rz2Lnr7E6RXsX/LWyC7HmnZ1y6SGVd1eEV0QZnTkagcflmUNHWac0l9VFfdntDEo3hlKBV/WraTfySc8DETNzxgGdrOrOSBe+MoAK/EmOESowvNelJNGhLqw2Znkygl7rMSJuttrxE4GQlD15EfS3v8S3nBBRUob/Z+YK868C1Wjm0xUm+0QGRXF1TyANEt5KLOKyin2n4heHCPbo+No568ykWpFk5gh5pAs0P31l5s/3W+mqA5WLDY4Y2NLTejxc0kv4PTf8Ql1P3joLAdNyylmlauRJbn60coD07c="
  file_glob: true
  file:
    - $OUTDIR/*.dmg
    - $OUTDIR/*.zip
  skip_cleanup: true
  on:
    tags: true
